name: Publish Release

on:
  push:
    tags:
      - "*"
    branches:
      - "main"
    paths:
      - "Docs/CHANGELOG.md"
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get repo name
        id: get_repo_name
        run: |
          ## Used for release zip
          repo_fullname="${{ github.repository }}"
          repo_name="${repo_fullname##*/}"

          echo "Repo name: $repo_name"
          echo "repo_name=$repo_name" >> $GITHUB_OUTPUT

      - name: Get version tag
        id: get_version_tag
        shell: bash
        run: |
          version=v$(grep -m 2 '^' Docs/CHANGELOG.md | sed 's/^## //' | sed 's/# Changelog//' | grep -m 1 '[0-9]*\.[0-9]*\.[0-9]*')
          old_version=$(while read -r line; do echo "$line"; done < .release/old_version)

          echo "Version: $version"
          echo "Old Version: $old_version"

          echo "version=$version" >> $GITHUB_OUTPUT
          echo "old_version=$old_version" >> $GITHUB_OUTPUT

      - name: Create assets
        id: create_assets
        run: |
          repo_name=${{ steps.get_repo_name.outputs.repo_name }}
          version=${{ steps.get_version_tag.outputs.version }}
          output_zip="${repo_name}-${version}.zip"
          output_xz="${repo_name}-${version}.tar.xz"
          git config tar.tar.xz.command "xz -c"

          git archive --format zip -9 --prefix="${repo_name}/" --output "$output_zip" HEAD
          git archive --format tar.xz -9 --prefix="${repo_name}/" --output "$output_xz" HEAD

          echo "output_zip=$output_zip" >> $GITHUB_OUTPUT
          echo "output_xz=$output_xz" >> $GITHUB_OUTPUT

      - name: Create SHA256 checksums
        id: chk_sha256
        shell: bash
        run: |
          # Show and write hashes to SHA256_CHECKSUMS.txt
          sha256sum ${{ steps.create_assets.outputs.output_zip }} | tee SHA256_CHECKSUMS.txt
          sha256sum ${{ steps.create_assets.outputs.output_xz }} | tee -a SHA256_CHECKSUMS.txt
          # Check them again
          sha256sum -c SHA256_CHECKSUMS.txt
          # Save for upload
          echo "output_checksums=SHA256_CHECKSUMS.txt" >> $GITHUB_OUTPUT
        
      - name: Get description
        id: get_desc
        shell: bash
        run: |
          vers=${{ steps.get_version_tag.outputs.version }}
          overs=${{ steps.get_version_tag.outputs.old_version }}
          description=""
          while IFS= read -r line; do
            [[ -z "$line" ]] && break
            description+="$line
          "
          done < Docs/CHANGELOG.md

          description+="
          **Full Changelog:** https://github.com/ninja-left/CRYPT-GUI/compare/$overs...$vers"

          # Read contents of SHA256_CHECKSUMS.txt and add it to release body
          description+="
          ```checksums
          $(cat ${{ steps.chk_sha256.outputs.output_checksums }} )```"

          echo "Description:"
          echo "$description"

          ## https://trstringer.com/github-actions-multiline-strings/#option-2---environment-variable
          echo "release_body<<EOF" >> $GITHUB_OUTPUT
          echo "$description" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Update old_version
        shell: bash
        run: |
          echo "${{ steps.get_version_tag.outputs.version }}" >.release/old_version
          echo "\n">.release/old_version
          echo "Old version content:"
          cat .release/old_version

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version_tag.outputs.version }}
          release_name: ${{ steps.get_version_tag.outputs.version }}
          body: ${{ steps.get_desc.outputs.release_body }}
          draft: false
          prerelease: false

      - name: Upload zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.create_assets.outputs.output_zip }}
          asset_name: ${{ steps.create_assets.outputs.output_zip }}
          asset_content_type: application/zip

      - name: Upload tar
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.create_assets.outputs.output_xz }}
          asset_name: ${{ steps.create_assets.outputs.output_xz }}
          asset_content_type: application/x-gtar

      - name: Upload checksums
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.chk_sha256.outputs.output_checksums }}
          asset_name: ${{ steps.chk_sha256.outputs.output_checksums }}
          asset_content_type: application/txt
